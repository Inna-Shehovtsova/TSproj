{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://ts-h/./src/Game.ts","webpack://ts-h/./src/GameField.ts","webpack://ts-h/./src/GameView.ts","webpack://ts-h/./src/index.ts"],"sourcesContent":["import { GameField, IGameField } from \"./GameField\";\nimport { GameView, IGameView } from \"./GameView\";\nimport { Cell } from \"./types/Cell\";\n\nexport interface IGame {\n  getGameState(): Cell[][];\n  getGameStep(): number;\n}\nexport class Game implements IGame {\n  field: IGameField;\n  view: IGameView;\n  stepDurationMs: number;\n  state: Cell[][];\n  maxGenerations: number;\n  timerId: NodeJS.Timeout | string | number | undefined;\n  getGameState() {\n    return this.state;\n  }\n  getGameStep() {\n    return this.stepDurationMs;\n  }\n  constructor(field: IGameField, view: IGameView, dur: number = 5) {\n    this.field = field;\n    this.view = view;\n    this.stepDurationMs = dur;\n    this.maxGenerations = 1000;\n    this.timerId = undefined;\n    this.view.onFieldSizeChange((width, height) => {\n      this.field.setSize(width, height);\n      this.state = this.field.getState();\n      //console.log('updateGameField size', this.state);\n      this.view.updateGameState({ width: width, height: height });\n      this.view.updateGameField(this.state);\n      //console.log('after updateGameField size', this.state);\n    });\n\n    this.view.onCellClick((x, y) => {\n      this.field.toggleCellState(x, y);\n      this.state = this.field.getState();\n      console.log(\"updateGameField cellclick\", this.state);\n      this.view.updateGameField(this.state);\n    });\n\n    this.view.onGameStateChange((isPlay) => {\n      this.view.updateGameState({ isRunning: isPlay });\n      if (isPlay) {\n        this.field.nextGeneration();\n        this.state = this.field.getState();\n        this.view.updateGameField(this.state);\n\n        this.timerId = setInterval(() => {\n          this.field.nextGeneration();\n          this.state = this.field.getState();\n          this.view.updateGameField(this.state);\n        }, this.stepDurationMs);\n      } else {\n        clearInterval(this.timerId);\n        this.state = this.field.getState();\n        this.view.updateGameField(this.state);\n      }\n    });\n    this.state = field.getState();\n\n    this.view.updateGameState({\n      isRunning: false,\n      width: this.state[0].length,\n      height: this.state.length,\n    });\n\n    this.view.updateGameField(this.state);\n  }\n}\n","import { Cell } from \"./types/Cell\";\n\nexport interface IGameField {\n  getState(): Cell[][];\n  toggleCellState(x: number, y: number): void;\n  nextGeneration(): void;\n  setSize(width: number, height: number): void;\n}\n\nexport class GameField implements IGameField {\n  state: Cell[][];\n  nextState: Cell[][];\n\n  makeField(width: number = 0, height: number = 0): Cell[][] {\n    let outer = new Array(height);\n    for (let i: number = 0; i < height; i++) {\n      const inner = new Array(width);\n      inner.fill(0);\n      outer[i] = inner;\n    }\n    if (width == 0 && height == 0) outer = [[]];\n    return outer;\n  }\n  constructor(width: number = 0, height: number = 0) {\n    this.state = this.makeField(width, height);\n    this.nextState = this.makeField(width, height);\n  }\n  getState(): Cell[][] {\n    return this.state;\n  }\n  toggleCellState(x: number, y: number, state:Cell[][]=this.state): void {\n    //console.log(\"toggle x \", x, \" y \", y, \" state \", this.state[y][x],\" all \",  this.state) ;\n    state[y][x] = state[y][x] ? 0 : 1;\n    //console.log(\"end toggle x \", x, \" y \", y, \" state \", this.state[y][x],\" all \",  this.state) ;\n  }\n  makeAlive(x: number, y: number, state:Cell[][]=this.state): boolean {\n    const i_init: number = Math.max(x - 1, 0);\n    const j_init: number = Math.max(y - 1, 0);\n    const maxX: number = Math.min(state.length, x + 2);\n    const maxY: number = Math.min(state[x].length, y + 2);\n    //console.log(\"needChange i\", i_init, \" j \", j_init, \" mX \", maxX, \" my \", maxY, ' x ', x, ' y ', y);\n    let sum: number = 0;\n    for (let i = i_init; i < maxX; ++i) {\n      for (let j = j_init; j < maxY; ++j) {\n        sum += state[i][j];\n      }\n    }\n    let makeAliveTrue = false;\n    if (state[x][y] == 0) makeAliveTrue = sum === 3;\n   \n    if (state[x][y] == 1) {\n      makeAliveTrue = sum >2 && sum < 5; \n    } \n\n    //console.log(\"needChange sum \", sum, \" change \", makeAliveTrue);\n    return makeAliveTrue;\n  }\n\n  growNew(prevState:Cell[][]):Cell[][]{\n    let n = this.makeField(prevState[0].length, prevState.length);\n    for (let i: number = 0; i < prevState.length; i++) {\n      for (let j: number = 0; j < prevState[i].length; j++) {\n        if (this.makeAlive(i, j, prevState)) {\n          this.toggleCellState(j, i, n);\n        }\n      }\n    }\n    //console.log(\"grow new\", n);\n    return n;\n  }\n  \n  nextGeneration(): void {\n    //console.log(' state 0 ', this.state);\n    this.state = this.growNew(this.state)\n    //console.log('next state 1 ', this.state);\n \n    this.nextState =this.growNew(this.state);\n    //console.log('next state 2', this.nextState);\n  }\n\n  copyToNextSize(width: number, height: number, state:Cell[][]){\n    const nState: Cell[][] = this.makeField(width, height);\n\n    for (let i: number = 0; i < Math.min(state.length, height); i++) {\n      for (let j: number = 0; j < Math.min(state[i].length, width); j++) {\n        nState[i][j] = state[i][j];\n      }\n    }\n    return nState;\n  }\n\n  setSize(width: number, height: number): void {    \n    this.state = this.copyToNextSize(width, height, this.state);\n    this.nextState = this.copyToNextSize(width, height, this.nextState );\n  }\n}\n","import { Cell } from \"./types/Cell\";\n\nexport interface IGameView {\n  updateGameField(field: Cell[][]): void;\n  updateGameState(state: {\n    width?: number;\n    height?: number;\n    isRunning?: boolean;\n  }): void;\n  onCellClick(cb: (x: number, y: number) => void): void;\n  onGameStateChange(cb: (newState: boolean) => void): void;\n  onFieldSizeChange(cb: (width: number, height: number) => void): void;\n}\ntype State = {\n  width: number;\n  height: number;\n  isRunning: boolean;\n};\n\nexport class GameView implements IGameView {\n  rootEl: HTMLElement;\n\n  cssAlive: string;\n  cssDead: string;\n  cssCell: string;\n  cssBRun: string;\n  cssBStop: string;\n  bTextRun: string;\n  bTextStop: string;\n\n  state: State;\n  cbFn: Map<string, Set<Function>>;\n\n  notDead(state:Cell[][]):boolean{\n    let sum = state.reduce((sum, el)=>sum = sum+ el.reduce((s, e)=>s = s+e, 0), 0);\n    return sum > 0;\n  }\n  updateGameField(field: Cell[][]): void {\n    console.log(\"!!!!updateGameField inner \", field);\n    const runningStatus = this.notDead(field) && this.state.isRunning;\n    if (\n      this.state.height != field.length ||\n      this.state.width != field[0].length\n      ||\n      this.state.isRunning != runningStatus\n    ) {\n      // console.log(\n      //   \"updateGameField .updateGameState\",\n      //   field[0].length,\n      //   field.length,\n      // );\n      this.updateGameState({ width: field[0].length, height: field.length, isRunning:runningStatus });\n    }\n    for (let i = 0; i < this.state.height; i++) {\n      for (let j = 0; j < this.state.width; j++) {\n        const cell = this.rootEl.querySelector(`.pos${i}_${j}`);\n        if (field[i][j]) {\n          cell?.classList.remove(this.cssDead);\n          cell?.classList.add(this.cssAlive);\n        } else {\n          cell?.classList.remove(this.cssAlive);\n          cell?.classList.add(this.cssDead);\n        }\n      }\n    }\n  }\n\n  updateGameState(state: {\n    width?: number;\n    height?: number;\n    isRunning?: boolean;\n  }): void {\n    console.log(\"updateGameState \", state);\n    state.width ??= this.state.width;\n    state.height ??= this.state.height;\n    if (state.width != this.state.width || state.height != this.state.height) {\n      this.cbFn.get(\"onFieldSizeChange\")?.forEach((v1, v2, set) => {\n        v1(state.width, state.height);\n      });\n    }\n    state.isRunning ??= this.state.isRunning;\n    if (state.isRunning != this.state.isRunning)\n      this.cbFn.get(\"onGameStateChange\")?.forEach((v1, v2, set) => {\n        v1(state.isRunning);\n      });\n  }\n\n  onCellClick(cb: (x: number, y: number) => void): void {\n    let f = this.cbFn.get(\"onCellClick\");\n    if (!f) f = new Set();\n    f.add(cb);\n    this.cbFn.set(\"onCellClick\", f);\n  }\n  onGameStateChange(cb: (newState: boolean) => void): void {\n    let f = this.cbFn.get(\"onGameStateChange\");\n    if (!f) f = new Set();\n    f.add(cb);\n    this.cbFn.set(\"onGameStateChange\", f);\n  }\n  onFieldSizeChange(cb: (width: number, height: number) => void): void {\n    let f = this.cbFn.get(\"onFieldSizeChange\");\n    if (!f) f = new Set();\n    f.add(cb);\n    this.cbFn.set(\"onFieldSizeChange\", f);\n  }\n  /* clickPlay(){ \n    let w = Number(\n      (this.rootEl.querySelector(\n        \"input[type='number'].field-size.field-size--width\"\n      ) as HTMLInputElement).value\n    );\n    let h = Number( (this.rootEl.querySelector(\n        \"input[type='number'].field-size.field-size--height\" \n      ) as HTMLInputElement).value\n      );\n    console.log(' clickPlay() update call');\n    this.updateGameState({width:w, height:h, isRunning:!this.state});\n  }*/\n  constructor(el: HTMLElement) {\n    this.rootEl = el;\n    this.cssAlive = \"cell--alive\";\n    this.cssDead = \"cell--dead\";\n    this.cssCell = \"cell\";\n    this.cssBRun = \"run-button--stopped\";\n    this.cssBStop = \"run-button--runned\";\n    this.bTextRun = \"Play\";\n    this.bTextStop = \"Stop\";\n    this.state = { width: 0, height: 0, isRunning: false };\n\n    const gameFieldEl = document.createElement(\"div\");\n    gameFieldEl.classList.add(\"gameField\");\n    this.rootEl.insertAdjacentElement(\"afterbegin\", gameFieldEl);\n    const gameControl = document.createElement(\"div\");\n    gameControl.classList.add(\"gameControls\");\n    gameControl.innerHTML = `<form>\n                    <input type='number' class=\"field-size field-size--width\"></input>\n                    <input type='number' class=\"field-size field-size--height\"></input>\n                    <button type=\"button\" class=\"run-button run-button--stopped\">${this.bTextRun}\n                    </button></form>`;\n\n    this.rootEl.insertAdjacentElement(\"beforeend\", gameControl);\n    this.rootEl\n      .querySelector(\".run-button\")\n      ?.addEventListener(\"click\", (ev) => {\n        const w = Number(\n          (\n            this.rootEl.querySelector(\n              \"input[type='number'].field-size.field-size--width\",\n            ) as HTMLInputElement\n          ).value,\n        );\n        const h = Number(\n          (\n            this.rootEl.querySelector(\n              \"input[type='number'].field-size.field-size--height\",\n            ) as HTMLInputElement\n          ).value,\n        );\n       // if (ev.bubbles)\n          this.updateGameState({\n            width: w,\n            height: h,\n            isRunning: !this.state.isRunning,\n          });\n      });\n    //for jest test\n    this.rootEl.querySelector(\".run-button\").innerHTML = `${this.bTextRun}`;\n    this.rootEl\n      .querySelector(\".field-size.field-size--width\")\n      ?.addEventListener(\"change\", (ev) => {\n        \n        //if (ev.bubbles) {\n          const w = Number(\n            (\n              this.rootEl.querySelector(\n                \"input[type='number'].field-size.field-size--width\",\n              ) as HTMLInputElement\n            ).value,\n          );\n          const h = Number(\n            (\n              this.rootEl.querySelector(\n                \"input[type='number'].field-size.field-size--height\",\n              ) as HTMLInputElement\n            ).value,\n          );\n\n          console.log(\"field-size--width updateGameState\");\n          this.updateGameState({ width: w, height: h });\n        //}\n      });\n    this.rootEl\n      .querySelector(\".field-size.field-size--height\")\n      ?.addEventListener(\"change\", (ev) => {\n       // if (ev.bubbles) {\n          const w = Number(\n            (\n              this.rootEl.querySelector(\n                \"input[type='number'].field-size.field-size--width\",\n              ) as HTMLInputElement\n            ).value,\n          );\n          const h = Number(\n            (\n              this.rootEl.querySelector(\n                \"input[type='number'].field-size.field-size--height\",\n              ) as HTMLInputElement\n            ).value,\n          );\n\n          console.log(\"field-size--height updateGameState\");\n          \n          this.updateGameState({ width: w, height: h });\n          console.log(\"after_update game state\");\n       // }\n      });\n\n    this.cbFn = new Map();\n    this.onFieldSizeChange((width: number, height: number) => {\n      console.log(\"change size state\", width, height);\n      this.state.width = width;\n      this.state.height = height;\n    });\n    this.onFieldSizeChange((width: number, height: number) => {\n      console.log(\"change size input values\", width, height);\n      const w = this.rootEl.querySelector(\n        \"input[type='number'].field-size.field-size--width\",\n      ) as HTMLInputElement;\n      w.value = String(width);\n      const h = this.rootEl.querySelector(\n        \"input[type='number'].field-size.field-size--height\",\n      ) as HTMLInputElement;\n      h.value = String(height);\n    });\n    this.onFieldSizeChange((width: number, height: number) => {\n      console.log(\"change size div cell\", width, height);\n      for (const el of this.rootEl.querySelectorAll(\".cell\")) {\n        el.remove();\n      }\n      for (let i = 0; i < height; i++) {\n        const par: HTMLElement = document.createElement(\"div\");\n        par.classList.add(\"rowcell\");\n        for (let j = 0; j < width; j++) {\n          const cell: HTMLElement = document.createElement(\"div\");\n          cell.classList.add(this.cssCell);\n          cell.classList.add(`pos${i}_${j}`);\n          cell.addEventListener(\"click\", () => {\n            this.cbFn.get(\"onCellClick\")?.forEach((v1, v2, set) => {\n              v1(j, i);\n            });\n          });\n          par.insertAdjacentElement(\"beforeend\", cell);\n        }\n        this.rootEl\n          .querySelector(\".gameField\")\n          ?.insertAdjacentElement(\"beforeend\", par);\n      }\n    });\n    this.onCellClick((x, y) => {\n      const cell = this.rootEl.querySelector(`pos${x}_${y}`);\n      if (cell?.classList.contains(this.cssAlive)) {\n        cell?.classList.remove(this.cssAlive);\n        cell?.classList.add(this.cssDead);\n      } else {\n        cell?.classList.remove(this.cssDead);\n        cell?.classList.add(this.cssAlive);\n      }\n    });\n\n    this.onGameStateChange((s) => {\n      this.state.isRunning = s;\n    });\n    this.onGameStateChange((s) => {\n      const el = this.rootEl.querySelector(\".run-button\");\n\n      if (el) {\n        if (s) {\n          el.classList.remove(this.cssBRun);\n          el.classList.add(this.cssBStop);\n          el.innerHTML = this.bTextStop;\n        } else {\n          el.classList.remove(this.cssBStop);\n          el.classList.add(this.cssBRun);\n          el.innerHTML = this.bTextRun;\n        }\n      }\n    });\n    this.updateGameState(this.state);\n  }\n}\n","import { Game } from \"./Game\";\nimport { GameField } from \"./GameField\";\nimport { GameView } from \"./GameView\";\n// import \"./style/style.css\";\n\nconst el = document.getElementById(\"app\") as HTMLElement;\n\nconst gameView = new GameView(el);\nconst gameField = new GameField(5, 5);\nnew Game(gameField, gameView, 1000);\n"],"names":["Game","field","view","_this","dur","arguments","length","undefined","_classCallCheck","this","stepDurationMs","maxGenerations","timerId","onFieldSizeChange","width","height","setSize","state","getState","updateGameState","updateGameField","onCellClick","x","y","toggleCellState","console","log","onGameStateChange","isPlay","isRunning","nextGeneration","setInterval","clearInterval","key","value","GameField","makeField","nextState","outer","Array","i","inner","fill","i_init","Math","max","j_init","maxX","min","maxY","sum","j","makeAliveTrue","prevState","n","makeAlive","growNew","nState","copyToNextSize","gameView","GameView","el","_this$rootEl$querySel","_this$rootEl$querySel2","_this$rootEl$querySel3","rootEl","cssAlive","cssDead","cssCell","cssBRun","cssBStop","bTextRun","bTextStop","gameFieldEl","document","createElement","classList","add","insertAdjacentElement","gameControl","innerHTML","concat","querySelector","addEventListener","ev","w","Number","h","cbFn","Map","String","_step","_iterator","_createForOfIteratorHelper","querySelectorAll","s","done","remove","err","e","f","_loop","_this$rootEl$querySel4","par","_loop2","cell","_this$cbFn$get","get","forEach","v1","v2","set","contains","reduce","runningStatus","notDead","_state$width","_state$height","_state$isRunning","_this$cbFn$get3","_this$cbFn$get2","cb","Set","getElementById"],"sourceRoot":""}